package com.company;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;

public class FileTransferServer {
    private static final int PORT = 0;

    public static void main(String[] args) throws Exception {
        /*
        * в следующем фрагменте кода нам необходимо инициализировать
        * серверный сокет и заставить его принимать сообщения
        * */

        //TODO: введите кооректное значание константы PORT для успешной инициализации экземпляра класса
        ServerSocket ssock = new ServerSocket(PORT);

        //TODO: подставьте метод, который возвращает значание сокета, принимающего соединения
        //Socket socket = ssock./*МЕТОД ЗАСТАВЛЯЮЩИЙ СОКЕТ ПРИНИМАТЬ СОЕДИНЕНИЯ*/;

        /*
        * в следующем фрагменте кода необходимо создать файл,
        * а также потоки  и вывода
        * */

        //TODO: создайте файл, используйте в качестве параметра полное имя файла, который собираетесь отправить
        //File file = new File("ПОЛНОЕ ИМЯ ФАЙЛА, КОТОРЫЙ ХОТИТЕ ОТПРАВИТЬ");

        //TODO: создайте поток файлового ввода, используя экземпляр файла, созданный ранее
        //FileInputStream ИМЯ_ПОТОКА = new FileInputStream(/*ЭКЗЕМПЛЯР ФАЙЛА*/);

        //TODO: создайте буферизованный поток ввода, используя файловый поток вывода, созданный ранее
        //BufferedInputStream ИМЯ_ПОТОКА = new BufferedInputStream(/*ФАЙЛОВЫЙ ПОТОК ВЫВОДА*/);

        //TODO: вызовите метод получения потока вывода сокета
        //OutputStream os = socket./*МЕТОД ПОЛУЧЕНИЯ ПОТОКА ВЫВОДА*/;

        /*
        * далее необходимо разработать алгоритм, реализующий трансляцию файла в массив байт
        * и последующую запись этого массива в сокет
        * */

        //TODO: создайте массив байт, переменную, которая хранит длину файла и переменную состояния

        // /*ТИП_ДАННЫХ*/[] contents;
        // Для хранения таких данных как длина файла лучше исползовать типы данных с большим диапозоном значений
        // /*ТИП_ДАННЫХ*/fileLength = file./*МЕТОД ПОЛУЧЕНИЯ ДЛИННЫ*/;
        // /*ТИП_ДАННЫХ*/ current = 0;

        //TODO: разработайте алгоритм реализующий чтение из файла и запись в сокет, взяв за основу цикл while
        //условие выхода из цикла уже прописано
        //while (current != fileLength) {
            /*
            * здесь ваш код чтения/записи
            * */
        //}

        //TODO: освоюодите поток вывода сокета
        //os.flush();
        //TODO: закройте оба сокета и выведете сообщение
        System.out.println("ВАШЕ СООБЩЕНИЕ");
    }
}
